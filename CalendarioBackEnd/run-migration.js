const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');

// Configuraci√≥n de la base de datos
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || 'password',
  database: process.env.DB_NAME || 'calendar',
});

async function runMigration() {
  try {
    console.log('üöÄ Iniciando migraci√≥n de la tabla user_profiles...');

    // Leer el archivo SQL
    const migrationPath = path.join(
      __dirname,
      'database',
      'migrations',
      '001_create_user_profiles_table.sql'
    );
    const sqlContent = fs.readFileSync(migrationPath, 'utf8');

    // Ejecutar la migraci√≥n
    await pool.query(sqlContent);

    console.log('‚úÖ Migraci√≥n ejecutada exitosamente');
    console.log(
      'üìã Tabla user_profiles creada con todos los √≠ndices y triggers'
    );

    // Verificar que la tabla se cre√≥ correctamente
    const result = await pool.query(`
      SELECT table_name, column_name, data_type, is_nullable 
      FROM information_schema.columns 
      WHERE table_name = 'user_profiles' 
      ORDER BY ordinal_position
    `);

    console.log('\nüìä Estructura de la tabla user_profiles:');
    result.rows.forEach(row => {
      console.log(
        `  - ${row.column_name}: ${row.data_type} (${row.is_nullable === 'YES' ? 'nullable' : 'not null'})`
      );
    });
  } catch (error) {
    console.error('‚ùå Error ejecutando migraci√≥n:', error.message);

    if (error.code === '42P07') {
      console.log('‚ÑπÔ∏è  La tabla user_profiles ya existe');
    } else if (error.code === 'ECONNREFUSED') {
      console.log(
        '‚ùå Error de conexi√≥n a la base de datos. Verifica que PostgreSQL est√© ejecut√°ndose'
      );
    } else if (error.code === '28P01') {
      console.log(
        '‚ùå Error de autenticaci√≥n. Verifica las credenciales de la base de datos'
      );
    } else if (error.code === '3D000') {
      console.log(
        '‚ùå La base de datos no existe. Crea la base de datos calendario_db primero'
      );
    }
  } finally {
    await pool.end();
  }
}

// Ejecutar migraci√≥n
runMigration();

